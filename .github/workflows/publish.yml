# https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-gradle
name: Publish package to the Maven Central Repository
on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to release'
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Set up Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@f9c9c575b8b21b6485636a91ffecd10e558c62f6

      - name: Show Version Number
        id: version
        run: |
          echo "Version=${{ github.event.release.tag_name }}"

      - name: Build package
        run: |
          ./gradlew build

      - name: Set version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION=${{ github.event.inputs.version }}
          else
            VERSION=${{ github.event.release.tag_name }}
          fi
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Publish package
        run: |
          ./gradlew --no-daemon --stacktrace --max-workers=1 --info publish closeAndReleaseStagingRepository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME_Y }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN_Y }}
          SDK_VERSION: ${{ env.VERSION }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSWORD }}

      - name: Create GitHub Issue on Failure
        if: failure()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { owner, repo } = context.repo;
            const version = process.env.VERSION;
            const issueTitle = `Release job for ${version} failed`;
            const issueBody = `The release job failed. Please check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.`;
            const assignees = [context.actor];
            await github.rest.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody,
              assignees
            });
