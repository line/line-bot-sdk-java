/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.linecorp.bot.shop.model;

import java.time.Instant;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;

import com.fasterxml.jackson.annotation.JsonEnumDefaultValue;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;



/**
 * Send mission stickers (v3)
 * @see <a href="https://developers.line.biz/en/reference/partner-docs/#send-mission-stickers-v3"> Documentation</a>
 */

@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record MissionStickerRequest (
/**
    * Destination user ID
    */
    
    @JsonProperty("to")
    String to,
/**
    * Package ID for a set of stickers
    */
    
    @JsonProperty("productId")
    String productId,
/**
    * &#x60;STICKER&#x60;
    */
    
    @JsonProperty("productType")
    String productType,
/**
    * &#x60;false&#x60;
    */
    
    @JsonProperty("sendPresentMessage")
    Boolean sendPresentMessage

)  {


    public static class Builder {
private String to;
    
        private boolean to$set;
    
private String productId;
    
        private boolean productId$set;
    
private String productType;
    
        private boolean productType$set;
    
private Boolean sendPresentMessage;
    
        private boolean sendPresentMessage$set;
    


        public Builder() {
        }

public Builder to(String to) {
            this.to = to;
    
            this.to$set = true;
    
            return this;
        }
public Builder productId(String productId) {
            this.productId = productId;
    
            this.productId$set = true;
    
            return this;
        }
public Builder productType(String productType) {
            this.productType = productType;
    
            this.productType$set = true;
    
            return this;
        }
public Builder sendPresentMessage(Boolean sendPresentMessage) {
            this.sendPresentMessage = sendPresentMessage;
    
            this.sendPresentMessage$set = true;
    
            return this;
        }


        public MissionStickerRequest build() {

            if (!this.to$set) {
                throw new IllegalStateException("'to' must be set for MissionStickerRequest.");
            }
    

            if (!this.productId$set) {
                throw new IllegalStateException("'productId' must be set for MissionStickerRequest.");
            }
    

            if (!this.productType$set) {
                throw new IllegalStateException("'productType' must be set for MissionStickerRequest.");
            }
    

            if (!this.sendPresentMessage$set) {
                throw new IllegalStateException("'sendPresentMessage' must be set for MissionStickerRequest.");
            }
    


            return new MissionStickerRequest(
to,productId,productType,sendPresentMessage
            );
        }
    }
}
