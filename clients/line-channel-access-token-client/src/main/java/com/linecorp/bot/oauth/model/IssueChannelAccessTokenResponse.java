/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.linecorp.bot.oauth.model;



import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Issued channel access token
 *
 * @see <a
 *     href="https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1">
 *     Documentation</a>
 */
@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record IssueChannelAccessTokenResponse(
    /** Channel access token. */
    @JsonProperty("access_token") String accessToken,
    /** Amount of time in seconds from issue to expiration of the channel access token */
    @JsonProperty("expires_in") Integer expiresIn,
    /** A token type. */
    @JsonProperty("token_type") String tokenType,
    /** Unique key ID for identifying the channel access token. */
    @JsonProperty("key_id") String keyId) {

  public static class Builder {
    private String accessToken;

    private boolean accessToken$set;

    private Integer expiresIn;

    private boolean expiresIn$set;

    private String tokenType;

    private boolean tokenType$set;

    private String keyId;

    private boolean keyId$set;

    public Builder() {}

    public Builder accessToken(String accessToken) {
      this.accessToken = accessToken;

      this.accessToken$set = true;

      return this;
    }

    public Builder expiresIn(Integer expiresIn) {
      this.expiresIn = expiresIn;

      this.expiresIn$set = true;

      return this;
    }

    public Builder tokenType(String tokenType) {
      this.tokenType = tokenType;

      this.tokenType$set = true;

      return this;
    }

    public Builder keyId(String keyId) {
      this.keyId = keyId;

      this.keyId$set = true;

      return this;
    }

    public IssueChannelAccessTokenResponse build() {

      if (!this.accessToken$set) {
        throw new IllegalStateException(
            "'accessToken' must be set for IssueChannelAccessTokenResponse.");
      }

      if (!this.expiresIn$set) {
        throw new IllegalStateException(
            "'expiresIn' must be set for IssueChannelAccessTokenResponse.");
      }

      if (!this.tokenType$set) {
        throw new IllegalStateException(
            "'tokenType' must be set for IssueChannelAccessTokenResponse.");
      }

      if (!this.keyId$set) {
        throw new IllegalStateException("'keyId' must be set for IssueChannelAccessTokenResponse.");
      }

      return new IssueChannelAccessTokenResponse(accessToken, expiresIn, tokenType, keyId);
    }
  }
}
