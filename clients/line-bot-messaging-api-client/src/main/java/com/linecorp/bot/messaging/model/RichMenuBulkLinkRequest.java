/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.linecorp.bot.messaging.model;



import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * RichMenuBulkLinkRequest
 *
 * @see <a href="https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-users">
 *     Documentation</a>
 */
@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record RichMenuBulkLinkRequest(
    /** ID of a rich menu */
    @JsonProperty("richMenuId") String richMenuId,
    /**
     * Array of user IDs. Found in the &#x60;source&#x60; object of webhook event objects. Do not
     * use the LINE ID used in LINE.
     */
    @JsonProperty("userIds") List<String> userIds) {

  public static class Builder {
    private String richMenuId;

    private boolean richMenuId$set;

    private List<String> userIds;

    private boolean userIds$set;

    public Builder() {}

    public Builder richMenuId(String richMenuId) {
      this.richMenuId = richMenuId;

      this.richMenuId$set = true;

      return this;
    }

    public Builder userIds(List<String> userIds) {
      this.userIds = userIds;

      this.userIds$set = true;

      return this;
    }

    public RichMenuBulkLinkRequest build() {

      if (!this.richMenuId$set) {
        throw new IllegalStateException("'richMenuId' must be set for RichMenuBulkLinkRequest.");
      }

      if (!this.userIds$set) {
        throw new IllegalStateException("'userIds' must be set for RichMenuBulkLinkRequest.");
      }

      return new RichMenuBulkLinkRequest(richMenuId, userIds);
    }
  }
}
