/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.linecorp.bot.messaging.model;



import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** LotteryAcquisitionConditionRequest */
@JsonTypeName("lottery")
@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record LotteryAcquisitionConditionRequest(
    /**
     * Probability (1-99) of winning the coupon in lottery-type campaigns. minimum: 1 maximum: 99
     */
    @JsonProperty("lotteryProbability") Integer lotteryProbability,
    /**
     * Maximum number of coupons that can be issued in total. Use -1 to indicate no limit maximum:
     * 999999
     */
    @JsonProperty("maxAcquireCount") Integer maxAcquireCount)
    implements AcquisitionConditionRequest {

  public static class Builder {
    private Integer lotteryProbability;
    private Integer maxAcquireCount;

    public Builder(Integer lotteryProbability, Integer maxAcquireCount) {

      this.lotteryProbability = lotteryProbability;

      this.maxAcquireCount = maxAcquireCount;
    }

    public LotteryAcquisitionConditionRequest build() {
      return new LotteryAcquisitionConditionRequest(lotteryProbability, maxAcquireCount);
    }
  }
}
