/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.linecorp.bot.messaging.model;



import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An object representing a emoji substitution.
 *
 * @see <a
 *     href="https://developers.line.biz/en/reference/messaging-api/#text-message-v2-emoji-object">
 *     Documentation</a>
 */
@JsonTypeName("emoji")
@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record EmojiSubstitutionObject(
    /** Get productId */
    @JsonProperty("productId") String productId,
    /** Get emojiId */
    @JsonProperty("emojiId") String emojiId)
    implements SubstitutionObject {

  public static class Builder {
    private String productId;
    private String emojiId;

    public Builder(String productId, String emojiId) {

      this.productId = productId;

      this.emojiId = emojiId;
    }

    public EmojiSubstitutionObject build() {
      return new EmojiSubstitutionObject(productId, emojiId);
    }
  }
}
