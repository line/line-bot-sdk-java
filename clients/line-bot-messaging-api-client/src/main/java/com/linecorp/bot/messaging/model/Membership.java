/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.linecorp.bot.messaging.model;



import com.fasterxml.jackson.annotation.JsonEnumDefaultValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Membership */
@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record Membership(
    /** Membership plan ID. */
    @JsonProperty("membershipId") Integer membershipId,
    /** Membership plan name. */
    @JsonProperty("title") String title,
    /** Membership plan description. */
    @JsonProperty("description") String description,
    /** List of membership plan perks. */
    @JsonProperty("benefits") List<String> benefits,
    /** Monthly fee for membership plan. (e.g. 1500.00) */
    @JsonProperty("price") Double price,
    /** The currency of membership.price. */
    @JsonProperty("currency") Currency currency,
    /** Number of members subscribed to the membership plan. */
    @JsonProperty("memberCount") Integer memberCount,
    /** The upper limit of members who can subscribe. If no upper limit is set, it will be null. */
    @JsonProperty("memberLimit") Integer memberLimit,
    /** Payment method for users who subscribe to a membership plan. */
    @JsonProperty("isInAppPurchase") Boolean isInAppPurchase,
    /** Membership plan status. */
    @JsonProperty("isPublished") Boolean isPublished) {

  /** The currency of membership.price. */
  public enum Currency {
    @JsonProperty("JPY")
    JPY,
    @JsonProperty("TWD")
    TWD,
    @JsonProperty("THB")
    THB,

    @JsonEnumDefaultValue
    UNDEFINED;
  }

  public static class Builder {
    private Integer membershipId;
    private String title;
    private String description;
    private List<String> benefits;
    private Double price;
    private Currency currency;
    private Integer memberCount;
    private Integer memberLimit;
    private Boolean isInAppPurchase;
    private Boolean isPublished;

    public Builder(
        Integer membershipId,
        String title,
        String description,
        List<String> benefits,
        Double price,
        Currency currency,
        Integer memberCount,
        Integer memberLimit,
        Boolean isInAppPurchase,
        Boolean isPublished) {

      this.membershipId = membershipId;

      this.title = title;

      this.description = description;

      this.benefits = benefits;

      this.price = price;

      this.currency = currency;

      this.memberCount = memberCount;

      this.memberLimit = memberLimit;

      this.isInAppPurchase = isInAppPurchase;

      this.isPublished = isPublished;
    }

    public Membership build() {
      return new Membership(
          membershipId,
          title,
          description,
          benefits,
          price,
          currency,
          memberCount,
          memberLimit,
          isInAppPurchase,
          isPublished);
    }
  }
}
