/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.linecorp.bot.webhook.model;

import java.time.Instant;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;

import com.fasterxml.jackson.annotation.JsonEnumDefaultValue;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;



/**
 * Content of the account link event.
 */

@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record LinkContent (
/**
    * One of the following values to indicate whether linking the account was successful or not
    */
    
    @JsonProperty("result")
    Result result,
/**
    * Specified nonce (number used once) when verifying the user ID.
    */
    
    @JsonProperty("nonce")
    String nonce

)  {
/**
     * One of the following values to indicate whether linking the account was successful or not
     */
    public enum Result {
@JsonProperty("ok")
      OK,
    @JsonProperty("failed")
      FAILED,
    

      @JsonEnumDefaultValue
      UNDEFINED;
    }


    public static class Builder {
private Result result;
    
        private boolean result$set;
    
private String nonce;
    
        private boolean nonce$set;
    


        public Builder() {
        }

public Builder result(Result result) {
            this.result = result;
    
            this.result$set = true;
    
            return this;
        }
public Builder nonce(String nonce) {
            this.nonce = nonce;
    
            this.nonce$set = true;
    
            return this;
        }


        public LinkContent build() {

            if (!this.result$set) {
                throw new IllegalStateException("'result' must be set for LinkContent.");
            }
    

            if (!this.nonce$set) {
                throw new IllegalStateException("'nonce' must be set for LinkContent.");
            }
    


            return new LinkContent(
result,nonce
            );
        }
    }
}
