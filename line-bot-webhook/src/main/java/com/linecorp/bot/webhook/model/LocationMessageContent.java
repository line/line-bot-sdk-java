/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.linecorp.bot.webhook.model;

import java.time.Instant;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;

import com.fasterxml.jackson.annotation.JsonEnumDefaultValue;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

import com.linecorp.bot.webhook.model.MessageContent;


/**
 * LocationMessageContent
 */
@JsonTypeName("location")

@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record LocationMessageContent (
/**
    * Message ID
    */
    
    @JsonProperty("id")
    String id,
/**
    * Title
    */
    
    @JsonProperty("title")
    String title,
/**
    * Address
    */
    
    @JsonProperty("address")
    String address,
/**
    * Latitude
    */
    
    @JsonProperty("latitude")
    Double latitude,
/**
    * Longitude
    */
    
    @JsonProperty("longitude")
    Double longitude

) implements MessageContent {


    public static class Builder {
private String id;
    
        private boolean id$set;
    
private String title;
    
private String address;
    
private Double latitude;
    
        private boolean latitude$set;
    
private Double longitude;
    
        private boolean longitude$set;
    


        public Builder() {
        }

public Builder id(String id) {
            this.id = id;
    
            this.id$set = true;
    
            return this;
        }
public Builder title(String title) {
            this.title = title;
    
            return this;
        }
public Builder address(String address) {
            this.address = address;
    
            return this;
        }
public Builder latitude(Double latitude) {
            this.latitude = latitude;
    
            this.latitude$set = true;
    
            return this;
        }
public Builder longitude(Double longitude) {
            this.longitude = longitude;
    
            this.longitude$set = true;
    
            return this;
        }


        public LocationMessageContent build() {

            if (!this.id$set) {
                throw new IllegalStateException("'id' must be set for LocationMessageContent.");
            }
    



            if (!this.latitude$set) {
                throw new IllegalStateException("'latitude' must be set for LocationMessageContent.");
            }
    

            if (!this.longitude$set) {
                throw new IllegalStateException("'longitude' must be set for LocationMessageContent.");
            }
    


            return new LocationMessageContent(
id,title,address,latitude,longitude
            );
        }
    }
}
